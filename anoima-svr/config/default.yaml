---
  appKey: "anoima-svr"
  appName:
    ja: "あの人は今？"
  version: 0.0.1
  webappbase: "/"
  sequelize:
    database: "anoima_db"
    username: "anoima_usr"
    password: "anoima001"
    options:
      dialect: "mysql"
      host: "127.0.0.1"
      port: 3306
      pool:
        maxConnections: 5
        maxIdleTime: 30
  passport:
    secret: "89refgiuaerh8isrggr98ratge"
    expire: 604800 # 一週間
  password:
    algorithm: "sha256"
  log4js:
    appenders:
      - type: "datefile"
        category: "access" # アクセスログ
        filename: "/var/log/local/anoima/access.log"
        pattern: "-yyyy-MM-dd"
        backups: 10
      - type: "datefile"
        category: "http" # 通信ログ
        filename: "/var/log/local/anoima/http.log"
        pattern: "-yyyy-MM-dd"
        backups: 10
      - type: "datefile"
        category: "error" # エラーログ
        filename: "/var/log/local/anoima/error.log"
        pattern: "-yyyy-MM-dd"
        maxLogSize: 107374182400 # 100MB
      - type: "file"
        category: "debug" # デバッグログ
        filename: "/var/log/local/anoima/debug.log"
        backups: 10
        maxLogSize: 10737418240 # 10MB
      - type: "console" # コンソール
    levels:
      access: "INFO"
      http: "INFO"
      error: "INFO"
      debug: "DEBUG"
    replaceConsole: true
  noaccesslog:
    - \.css
    - \.js
    - \.png
    - \.jpg
    - \.gif
    - \.ico
  swagger:
    swagger: "2.0"
    info:
      title: "あの人は今？"
      version: 0.0.1
      description: "あの人は今？WebアプリのサーバーサイドAPI。"
    basePath: "/api"
    consumes:
      - "application/json"
    produces:
      - "application/json"
      - "text/plain"
    definitions:
      User:
        type: object
        description: ユーザー情報
        required:
          - id
          - name
          - status
        properties:
          id:
            type: integer
            format: int32
            description: ユーザーID
          name:
            type: string
            description: ユーザー名
          status:
            type: string
            description: ステータス (user/admin/disable)
          comment:
            type: string
            description: ユーザーコメント
          createdAt:
            type: string
            format: date-time
            description: 登録日時
          updatedAt:
            type: string
            format: date-time
            description: 更新日時
      StageHeader:
        type: object
        required:
          - id
          - userId
          - status
        properties:
          id:
            type: integer
            format: int32
            description: ステージヘッダーID
          userId:
            type: integer
            format: int32
            description: ユーザーID
          status:
            type: string
            description: ステータス (private/public)
          createdAt:
            type: string
            format: date-time
            description: 登録日時
          updatedAt:
            type: string
            format: date-time
            description: 更新日時
          deletedAt:
            type: string
            format: date-time
            description: 削除日時
          user:
            $ref: '#/definitions/User'
      Stage:
        type: object
        required:
          - id
          - headerId
          - name
          - status
          - map
          - header
        properties:
          id:
            type: integer
            format: int32
            description: ステージID
          headerId:
            type: integer
            format: int32
            description: ステージヘッダーID
          name:
            type: string
            description: ステージ名
          status:
            type: string
            description: ステータス (latest/updated)
          map:
            type: string
            description: ステージデータ
          comment:
            type: string
            description: ステージコメント
          createdAt:
            type: string
            format: date-time
            description: 登録日時
          updatedAt:
            type: string
            format: date-time
            description: 更新日時
          header:
            $ref: '#/definitions/StageHeader'
      Playlog:
        type: object
        required:
          - id
          - stageId
          - userId
          - cleared
        properties:
          id:
            type: integer
            description: プレイログID
            format: int64
          stageId:
            type: integer
            description: ステージID
            format: int32
          userId:
            type: integer
            description: ユーザーID
            format: int32
          score:
            type: integer
            description: 獲得スコア
            format: int32
          cleared:
            type: boolean
            description: クリアしたか？
          createdAt:
            type: string
            format: date-time
            description: 登録日時
          updatedAt:
            type: string
            format: date-time
            description: 更新日時
    parameters:
      yearPathParam:
        in: path
        name: year
        description: 年
        type: integer
        format: int32
      monthPathParam:
        in: path
        name: month
        description: 月
        type: integer
        format: int32
    responses:
      BadRequest:
        description: バリデーションNG
        schema:
          type: string
      Unauthorized:
        description: 認証NG
        schema:
          type: string
      Forbidden:
        description: 権限NG
        schema:
          type: string
      NotFound:
        description: 該当データ無し
        schema:
          type: string
      RankingKeys:
        description: 取得成功
        schema:
          type: array
          items:
            - type: array
              items:
                - type: string
    securityDefinitions:
      AuthToken:
        type: apiKey
        in: header
        name: Authorization
        description: 認証トークン
